DROP DATABASE IF EXISTS web_store;
CREATE DATABASE web_store;

USE web_store;

DROP TABLE IF EXISTS user;
CREATE TABLE IF NOT EXISTS user (
    user_id INT AUTO_INCREMENT,
    email VARCHAR(255) NOT NULL,
    password VARCHAR(255) NOT NULL,
    user_group INT NOT NULL,
    name VARCHAR(255) NOT NULL,
    surname VARCHAR(255) NOT NULL,
    patronymic VARCHAR(255),
    phone_number INT,
    PRIMARY KEY (user_id),
    FOREIGN KEY (user_group)
        REFERENCES group(user_group)
        ON UPDATE CASCADE
        ON DELETE CASCADE
);

DROP TABLE IF EXISTS confirmation_token;
CREATE TABLE IF NOT EXISTS confirmation_token (
    user_id INT,
    token VARCHAR(36) NOT NULL,
    FOREIGN KEY (user_id)
            REFERENCES user(user_id)
            ON DELETE CASCADE
            ON UPDATE CASCADE
);

DROP TABLE IF EXISTS group;
CREATE TABLE IF NOT EXISTS group (
    user_group INT NOT NULL,
    group_name VARCHAR(36) NOT NULL,
    PRIMARY KEY (user_group)
);

DROP TABLE IF EXISTS product;
CREATE TABLE IF NOT EXISTS product (
    product_id INT AUTO_INCREMENT,
    product_name VARCHAR(255) NOT NULL,
    category_id INT NOT NULL,
    manufacturer_id INT NOT NULL,
    short_info VARCHAR(255) NOT NULL,
    cost INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (product_id),
    FOREIGN KEY (category_id)
        REFERENCES category(category_id)
        ON UPDATE CASCADE
        ON DELETE CASCADE,
    FOREIGN KEY (manufacturer_id)
        REFERENCES manufacturer(manufacturer_id)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);

DROP TABLE IF EXISTS category;
CREATE TABLE IF EXISTS category (
    category_id INT AUTO_INCREMENT,
    category_name VARCHAR(36) NOT NULL,
    sub_category VARCHAR(36),
    PRIMARY KEY (category_id)
);

DROP TABLE IF EXISTS manufacturer;
CREATE TABLE IF EXISTS manufacturer (
    manufacturer_id INT AUTO_INCREMENT,
    manufacturer_name VARCHAR(36) NOT NULL,
    manufacturer_info VARCHAR(255),
    manufacturer_logo VARCHAR(255),
    PRIMARY KEY (category_id)
);

--Scrip for clearing users
--Temporarily not needed
--CREATE EVENT delete_event
--ON SCHEDULE AT CURRENT_TIMESTAMP + INTERVAL 14 DAY
--ON COMPLETION PRESERVE
--DO BEGIN
--      DELETE FROM user WHERE user_id = (SELECT user_id FROM confirmation_token);
--END;

--for tests
INSERT INTO user VALUES(NULL, 'admin@mail.ru', 'qwerty', 1, 'admin', 'admin', NULL, NULL);
INSERT INTO group VALUES(NULL, 'Admin');
INSERT INTO product VALUES(NULL, 'Pen', 1, NULL, 'For writing', 50, quantity);
INSERT INTO category VALUES(NULL, 'Writing tools', NULL);
INSERT INTO manufacturer VALUES(NULL, 'RusTools', NULL, NULL)